name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "latest"

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          version: ${{ env.UV_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run linting
        run: uv run ruff check

      - name: Run formatting check
        run: uv run black --check .

      - name: Run type checking
        run: uv run mypy cipettelens/

      - name: Run tests
        run: uv run pytest

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          version: ${{ env.UV_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Test application startup
        run: |
          timeout 10s uv run python -c "from cipettelens.app import app; print('App imported successfully')" || true

      - name: Test data collection
        run: |
          GITHUB_TOKEN=test_token TARGET_REPOSITORIES=test/repo CIANALYZER_IMAGE=hello-world uv run collect
