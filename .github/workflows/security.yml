name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run comprehensive security scan weekly
    - cron: '0 3 * * 1'

env:
  PYTHON_VERSION: '3.11'
  UV_VERSION: '0.8.22'

jobs:
  security-scan:
    name: Comprehensive Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: ${{ env.UV_VERSION }}
        
    - name: Install dependencies
      run: uv sync --extra dev
      
    - name: Run bandit security linter
      run: |
        uv add bandit[toml]
        uv run bandit -r cipettelens/ -f json -o bandit-report.json
        uv run bandit -r cipettelens/ -f txt
        
    - name: Run safety dependency check
      run: |
        uv add safety
        uv run safety check --json --output safety-report.json
        uv run safety check
        
    - name: Run semgrep security analysis
      run: |
        uv add semgrep
        uv run semgrep --config=auto --json --output=semgrep-report.json cipettelens/
        uv run semgrep --config=auto cipettelens/
        
    - name: Run trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          bandit-report.json
          safety-report.json
          semgrep-report.json
          trivy-results.sarif

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: ${{ env.UV_VERSION }}
        
    - name: Install dependencies
      run: uv sync --extra dev
      
    - name: Run uv audit
      run: uv audit
      
    - name: Run pip-audit
      run: |
        uv add pip-audit
        uv run pip-audit --format=json --output=pip-audit-report.json
        uv run pip-audit
        
    - name: Upload dependency scan reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-reports-${{ github.run_number }}
        path: pip-audit-report.json

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t cipettelens:security-test .
      
    - name: Run Trivy image scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'cipettelens:security-test'
        format: 'sarif'
        output: 'trivy-image-results.sarif'
        
    - name: Upload Trivy image scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-image-results.sarif'
        
    - name: Run Docker Scout
      uses: docker/scout-action@v1
      with:
        command: cves
        image: cipettelens:security-test
        format: sarif
        output: docker-scout-results.sarif
        
    - name: Upload Docker Scout results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'docker-scout-results.sarif'

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run TruffleHog secret scanner
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
