[tools]
python = "3.11"
uv = "latest"

# =============================================================================
# Setup & Installation
# =============================================================================

[tasks.setup]
description = "Complete project setup (creates .env if not exists)"
run = [
    "test -f .env || cp env.example .env",
    "uv sync --extra dev",
    "mkdir -p logs db",
    "echo 'Setup complete! Edit .env file with your configuration.'"
]

[tasks.install]
description = "Install dependencies"
run = "uv sync"

[tasks.install-dev]
description = "Install development dependencies"
run = "uv sync --extra dev"

# =============================================================================
# Application
# =============================================================================

[tasks.web]
description = "Start web server"
run = "uv run web"

[tasks.collect]
description = "Collect CI metrics using CIAnalyzer"
run = "uv run collect"

[tasks.health]
description = "Check if application is running"
run = "curl -f http://localhost:5001/ || echo 'Application not running'"

# =============================================================================
# Development
# =============================================================================

[tasks.dev]
description = "Start development server (same as web)"
run = "uv run web"

# =============================================================================
# Code Quality
# =============================================================================

[tasks.lint]
description = "Check code with linter"
run = "uv run ruff check"

[tasks.lint-fix]
description = "Fix linting issues automatically"
run = "uv run ruff check --fix"

[tasks.format]
description = "Format code with black"
run = "uv run black ."

[tasks.format-check]
description = "Check if code is properly formatted"
run = "uv run black --check ."

[tasks.type-check]
description = "Run type checking with mypy"
run = "uv run mypy cipettelens/"

[tasks.check-all]
description = "Run all code quality checks"
run = [
    "uv run ruff check",
    "uv run black --check .",
    "uv run mypy cipettelens/"
]

# =============================================================================
# Testing
# =============================================================================

[tasks.test]
description = "Run all tests"
run = "uv run pytest"

[tasks.test-verbose]
description = "Run tests with verbose output"
run = "uv run pytest -v"

[tasks.test-watch]
description = "Run tests in watch mode"
run = "uv run pytest --watch"

# =============================================================================
# CI/CD
# =============================================================================

[tasks.ci]
description = "Run CI pipeline (lint + format + test)"
run = [
    "uv run ruff check",
    "uv run black --check .",
    "uv run pytest"
]

[tasks.pre-commit]
description = "Run pre-commit checks (fix + format + test)"
run = [
    "uv run ruff check --fix",
    "uv run black .",
    "uv run pytest"
]

# =============================================================================
# Database
# =============================================================================

[tasks.db-reset]
description = "Reset database (remove existing data)"
run = "rm -f db/data.sqlite && echo 'Database reset complete'"

# =============================================================================
# Utilities
# =============================================================================

[tasks.clean]
description = "Clean up temporary files and caches"
run = [
    "rm -rf __pycache__",
    "rm -rf .pytest_cache",
    "rm -rf .mypy_cache",
    "rm -rf htmlcov",
    "rm -f .coverage",
    "rm -f coverage.xml",
    "echo 'Cleanup complete'"
]

[tasks.help]
description = "Show available tasks"
run = "mise tasks"