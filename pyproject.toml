[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cipettelens"
version = "0.1.0"
description = "A minimal, viable CI/CD dashboard that visualizes metrics by wrapping the CIAnalyzer engine"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "CIPetteLens Team"},
]
maintainers = [
    {name = "CIPetteLens Team"},
]
keywords = [
    "ci",
    "cd", 
    "dashboard",
    "github-actions",
    "metrics",
    "visualization",
    "monitoring",
    "devops",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

# Core dependencies
dependencies = [
    "flask>=3.0.3",           # Web framework
    "python-dotenv>=1.0.1",   # Environment variable management
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",          # Testing framework
    "ruff>=0.1.0",            # Fast linter
    "black>=23.0.0",          # Code formatter
    "isort>=5.12.0",          # Import sorter
    "mypy>=1.5.0",            # Type checker
    "types-PyYAML>=6.0.0",    # PyYAML type stubs
]

# All development tools
all = [
    "cipettelens[dev]",
]

[project.urls]
Homepage = "https://github.com/your-username/CIPetteLens"
Repository = "https://github.com/your-username/CIPetteLens"
Issues = "https://github.com/your-username/CIPetteLens/issues"

[project.scripts]
# Main application entry points
cipettelens = "cipettelens.main:main"
web = "cipettelens.web.app:main"
collect = "cipettelens.cli.collect:collect_metrics"

# =============================================================================
# Tool Configuration
# =============================================================================

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "venv",
    "_build",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "T20", # flake8-print
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "T201",  # print statements (allowed in CLI tools)
    "N818",  # exception name should end with Error (we use Exception for consistency)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/**/*.py" = ["T201"]  # Allow print in tests
"cipettelens/cli/**/*.py" = ["T201"]  # Allow print in CLI tools

[tool.ruff.lint.isort]
known-first-party = ["cipettelens"]

[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'
extend-exclude = "/__pycache__|\\.git|\\.venv|venv|_build|build|dist|\\.*\\.egg-info"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cipettelens"]
known_third_party = ["flask", "dotenv"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "cipettelens.external.mock_data",
]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250915",
]
